name: 'Plugin setup'
description: 'Run plugin setup'
inputs:
  extra_php_extensions:
    description: 'List of additional php packages to install'
  extra_plugin_runners:
    description: 'Command to install dependencies'
  disable_behat:
    description: 'Option to disable behat tests'
  disable_phplint:
    description: 'Option to disable phplint tests'
  disable_phpunit:
    description: 'Option to disable phpunit tests'
  disable_grunt:
    description: 'Option to disable grunt'
  highest_moodle_branch:
    description: 'Holds the value of the highest moodle-branch in the test matrix'
runs:
  using: "composite"
  steps:
    - name: Check out repository code
      uses: actions/checkout@v2
      with:
        path: plugin
    - name: Install node  ${{ matrix.node }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node }}

    - name: Setup PHP ${{ matrix.php }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: pgsql, mysqli, zip, gd, xmlrpc, soap, ${{ inputs.extra_php_extensions }}
        coverage: none

    - name: Configure Required Composer Version
      id: install-composer1
      if: ${{ matrix.moodle-branch == 'MOODLE_32_STABLE' || matrix.moodle-branch == 'MOODLE_33_STABLE' }}
      run: |
        echo "::set-output name=COMPOSER_VERSION::--1"
      shell: bash

    - name: Update Composer
      if: ${{ matrix.moodle-branch == 'MOODLE_32_STABLE' || matrix.moodle-branch == 'MOODLE_33_STABLE' }}
      run: |
        composer self-update ${{ steps.install-composer1.outputs.COMPOSER_VERSION }}
      shell: bash

    - name: Initialise moodle-plugin-ci
      run: |
        composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^3
        # Add dirs to $PATH
        echo $(cd ci/bin; pwd) >> $GITHUB_PATH
        echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
        # PHPUnit depends on en_AU.UTF-8 locale
        sudo locale-gen en_AU.UTF-8
      shell: bash

    - name: Install dependencies
      if: ${{ inputs.extra_plugin_runners }}
      run: |
        ${{ inputs.extra_plugin_runners }}
      shell: bash

    - name: Install Moodle
      run:  moodle-plugin-ci install -vvv --plugin ./plugin --db-host=127.0.0.1
      shell: bash
      env:
        DB: ${{ matrix.database }}
        MOODLE_BRANCH: ${{ matrix.moodle-branch }}

    - name: Install Core Patches
      if: ${{ always() }}
      # We should attempt to install a patch, and pass if there isnt one for the branch.
      run: |
        git config --global user.email "test@test.com"
        git config --global user.name "Test"
        ((test -f plugin/patch/${{ matrix.moodle-branch }}.diff && cd moodle && git am --whitespace=nowarn < ../plugin/patch/${{ matrix.moodle-branch }}.diff) || echo No patch found;)
      shell: bash

    - name: Run phplint
      if: ${{ always() && inputs.disable_phplint != 'true' }}
      run: moodle-plugin-ci phplint
      shell: bash

    - name: Run codechecker
      if: ${{ always() }}
      run: moodle-plugin-ci codechecker
      shell: bash

    - name: Run validate
      if: ${{ always() }}
      run: moodle-plugin-ci validate
      shell: bash

    - name: Run savepoints
      if: ${{ always() }}
      run: moodle-plugin-ci savepoints
      shell: bash

    - name: Run mustache
      if: ${{ always() }}
      run: moodle-plugin-ci mustache
      shell: bash

    - name: Run grunt
      if: ${{ always() && inputs.disable_grunt != 'true' && inputs.highest_moodle_branch == matrix.moodle-branch }}
      run: moodle-plugin-ci grunt
      shell: bash

    - name: Run phpunit
      if: ${{ always() && inputs.disable_phpunit != 'true' }}
      run: |
        moodle-plugin-ci phpunit
        cd moodle
        vendor/bin/phpunit --fail-on-risky --disallow-test-output --filter tool_dataprivacy_metadata_registry_testcase
        vendor/bin/phpunit --fail-on-risky --disallow-test-output --testsuite core_privacy_testsuite --filter provider_testcase
      shell: bash

    - name: Run behat
      if: ${{ always() && inputs.disable_behat != 'true' }}
      run: moodle-plugin-ci behat --profile chrome
      shell: bash

    - name: PHP Copy/Paste Detector
      if: ${{ always() }}
      run: moodle-plugin-ci phpcpd || true
      shell: bash

    - name: PHP Mess Detector
      if: ${{ always() }}
      run: moodle-plugin-ci phpmd || true
      shell: bash
